apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: ${PROJECT_NAME}
    service_framework: laravel
  annotations:
    docker_tag: "${DOCKER_TAG}"
  name: ${PROJECT_NAME}
spec:
  replicas: ${SCALE_MIN}
  strategy: {}
  template:
    metadata:
      labels:
        service: ${PROJECT_NAME}
    spec:
      containers:
        - image: $CI_REGISTRY_IMAGE:$DOCKER_TAG
          name: ${PROJECT_NAME}
          envFrom:
          - configMapRef:
              name: ${PROJECT_NAME}
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: ${MEM_MIN}
              cpu: ${CPU_MIN}
            limits:
              memory: ${MEM_MAX}
              cpu: ${CPU_MAX}
      restartPolicy: Always
      imagePullSecrets:
        - name: tts
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ${PROJECT_NAME}
  name: ${PROJECT_NAME}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  ${PROJECT_NAME}_mapping
      prefix: /${PROJECT_NAME}/
      service: ${PROJECT_NAME}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    service: ${PROJECT_NAME}
  type: LoadBalancer
  externalTrafficPolicy: Local
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${PROJECT_NAME}-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${PROJECT_NAME}.thitruongsi.srv
    http:
      paths:
      - path: /
        backend:
          serviceName: ${PROJECT_NAME}-service
          servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: ${PROJECT_NAME}
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: ${PROJECT_NAME}
  minReplicas: ${SCALE_MIN}
  maxReplicas: ${SCALE_MAX}
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80